// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = ["sqlite", "mysql"]
  url      = env("DATABASE_URL")
}

model User {
  id            Int   @id @default(autoincrement())
  name          String
  pinyin        String
  phone         String
  seiueId       String
  seiueUsername String
  lastUserAgent String
  type          UserType
  logs          UserAuditLog[]
}

model Application {
  id            Int       @id @default(autoincrement())
  name          String
  icon          String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  redirectUrls  String[]
  scopes        Scope[]
  clientId      String
  clientSecret  String
  owner         User      @relation(fields: [ownerId], references: [id])
  ownerId       Int
  message       String
  approved      Boolean
  terms         String
  privacy       String
  logs          AppAuditLog[]
}

model Authorization {
  id            Int    @id @default(autoincrement())
  user          User   @relation(fields: [userId], references: [id])
  userId        Int
  application   Application @relation(fields: [applicationId], references: [id])
  applicationId Int
}

model UserAuditLog {
  id            Int    @id @default(autoincrement())
  user          User   @relation(fields: [userId], references: [id])
  userId        Int
  values        String[]
}

model AppAuditLog {
  id              Int    @id @default(autoincrement())
  application     Application @relation(fields: [applicationId], references: [id])
  applicationId   Int
  operationUser   User @relation(fields: [operationUserId], references: [id])
  operationUserId Int
  values          String[]
}

enum UserType {
  student
  teacher
}

enum UserAuditLogType {
  created
  logIn
  updated
  authorizedApp
  deauthorizedApp
}

enum AppAuditLogType {
  created
  updated
  authorizedUser
  approved
  disapproved
}

enum Scope {
  basic
  calendar
}
